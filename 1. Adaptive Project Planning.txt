// FIRST: keep selection + action fixed
const SELECT_COL: ColDef = {
  field: 'nameAndDetailsSearchHelper',
  headerName: '',
  width: 45, minWidth: 45, maxWidth: 45,
  checkboxSelection: checkboxSelectionFn,           // your existing fn
  headerCheckboxSelection: true,
  headerCheckboxSelectionFilteredOnly: true,
  showDisabledCheckboxes: true,
  suppressSizeToFit: true,                          // don't let sizeColumnsToFit change it
  suppressAutoSize: true,                           // don't let autosize change it
};

const ACTION_COL: ColDef = {
  field: 'documentId',
  headerName: 'Action',
  width: 120, minWidth: 110, maxWidth: 140,
  cellRenderer: agGridDownloadTemplateCellRenderer,
  suppressSizeToFit: true,
  suppressAutoSize: true,
};

// THEN: give content columns FLEX + MIN WIDTHS
const columnDefs: ColDef[] = [
  SELECT_COL,
  {
    field: 'documentName',
    headerName: 'Document Name',
    flex: 3,                       // takes 3 parts of remaining width
    minWidth: 260,
    wrapText: true,
    autoHeight: true,
    // make sure your name renderer does NOT add another checkbox
    cellRenderer: agGridNameRenderer,
    tooltipField: 'documentName',  // optional: show full text on hover
  },
  {
    field: 'journey',
    headerName: 'Category',
    flex: 2,
    minWidth: 160,
    cellRenderer: agGridCategoryCellRenderer,
  },
  {
    field: 'documentDescription',
    headerName: 'Document Details',
    flex: 4,
    minWidth: 320,
    wrapText: true,
    autoHeight: true,
    cellRenderer: agGridDetailsRenderer,
    tooltipField: 'documentDescription',
  },
  ACTION_COL,
];

// grid props
<AgGridReact
  columnDefs={columnDefs}
  defaultColDef={{ resizable: true }}
  // Let FLEX handle most sizing; only fit once / on container resize
  onFirstDataRendered={(e) => e.api.sizeColumnsToFit?.()}
  onGridSizeChanged={(e) => e.api.sizeColumnsToFit?.()}
  // (keep your other props)
  // context, rowData, selection, etc.
 />
